using UnityEngine;

public class Shooting : MonoBehaviour {
    private const string Name = "left shift";
    public float damage;
    public float range;
    public float spread;
    public float spreadTime;
    public float recovery;
    public float upRecoil = 0; 
    public float sideRecoil = 0;

    private bool readyToFire = true;

    public Camera fpsCam;

    public float fireTime;

    public GameObject bulletImpact;

    public float coolDown;

    public float sprintTimer;

    public int ammo;

    public int magazine;
    void Start()
    {
        
    }

    void Update() {
        if(Input.GetKey("left shift") && Input.GetButton("Fire1"))
        {
            sprintTimer = sprintTimer + 1;
        }
        else if(Input.GetKey("left shift"))
        {
            sprintTimer = 0;
        }
        else
        {
            sprintTimer = sprintTimer + 1;
        }

        if(sprintTimer >= 5)
        {
            if (Input.GetButton("Fire1"))
            {
                fireTime += Time.deltaTime;

                if(coolDown >= 30)
                {
                    fireTime = 0.0f;
                }

                if (readyToFire && magazine > 0)
                {
                    Shoot();
                    magazine--;
                    coolDown = 0;
                }
            }
            else
            {
                coolDown = coolDown + 1;
            }
        }

        if(Input.GetKey("r") && magazine < 30 && ammo > 0)
        {
            if(ammo >= 30)
            {
                ammo += (magazine - 30);
                magazine = 30;
            }
            else if(ammo < 30 && magazine == 0)
            {
                magazine = ammo;
                ammo = 30;
            }
            else if(ammo > 0 && ammo < 30)
            {
                int tempAmmo = ammo;
                ammo += (magazine - 30);
                if (ammo < 0)
                    ammo = 0;
                magazine += tempAmmo;
                if (magazine > 30)
                    magazine = 30;
            }
            else
            {
                ammo = 0;
            }
        }
    }

    void Shoot() {
        RaycastHit hit;

        Vector3 fireDirection = this.transform.forward;

        Quaternion fireRotation = Quaternion.LookRotation(fireDirection);

        Quaternion randomRotation = Random.rotation;

        float currentSpread = Mathf.Lerp(0.0f, spread, fireTime / spreadTime);

        fireRotation = Quaternion.RotateTowards(fireRotation, randomRotation, Random.Range(0.0f, currentSpread));

        if(Physics.Raycast(fpsCam.transform.position, fireRotation * Vector3.forward, out hit, range))
        {
            Target target = hit.transform.GetComponent<Target>();

            string myTag = hit.collider.tag;

            if(myTag.Contains("target"))
            {
                target.takeDamage(damage);
            }

            GameObject impactObj = Instantiate(bulletImpact, hit.point, Quaternion.LookRotation(hit.normal));
        }

        readyToFire = false;

        Invoke("SetReadyToFire", recovery);
    }

    void SetReadyToFire() {
        readyToFire = true;
    }
}
